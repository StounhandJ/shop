version: "3.7"

volumes:
    db_pg:
        name: db_pg

services:
  site:
    build: .
    restart: always
    environment:
      - APP_URL=https://${DOMAIN}
      - APP_DEBUG=False
      - PRODUCT=True
      - DB_HOST=pg_db
      - DB_USERNAME=root
      - DB_PASSWORD=podskf345bdpvm3
      - DB_DATABASE=feeldomDB
      - MEMCACHED_HOST=memcached_db
      - MEMCACHED_PORT=11211
    volumes:
        - ./public:/var/www/public
        - ./storage/app:/var/www/storage/app
        - ./data/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - pg_db
    logging:
        driver: "json-file"
        options:
            max-size: "200k"
            max-file: "2"
    container_name: site

  pg_db:
    image: postgres:13.4
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=podskf345bdpvm3
      - POSTGRES_DB=feeldomDB
    volumes:
      - db_pg:/var/lib/postgresql/data/
    logging:
        driver: "json-file"
        options:
            max-size: "200k"
            max-file: "2"
    container_name: pg_db

  nginx:
    image: nginx:alpine
    container_name: nginx
    command: [ "/bin/sh", "-c", "set -eu && envsubst '$$DOMAIN, $$BACK_END' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;' && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'" ]
    restart: unless-stopped
    environment:
        DOMAIN: ${DOMAIN}
        BACK_END: site
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/public
      - ./storage/app:/var/www/storage/app
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/nginx/default.conf:/etc/nginx/conf.d/default.conf.template
      - ./data/nginx/options-ssl-nginx.conf:/etc/nginx/conf.d/options-ssl-nginx.conf
      - ./data/nginx/ssl-dhparams.pem:/etc/nginx/conf.d/ssl-dhparams.pem
    logging:
        driver: "json-file"
        options:
            max-size: "200k"
            max-file: "2"
    depends_on:
      - site

  certbot:
      image: certbot/dns-cloudflare
      restart: unless-stopped
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --dns-cloudflare-credentials /cloudflare.ini; sleep 3d & wait $${!}; done;'"
      logging:
          driver: "json-file"
          options:
              max-size: "200k"
              max-file: "2"
      volumes:
          - ./data/certbot/cloudflare.ini:/opt/cerbot/cloudflare.ini
          - ./data/certbot/conf:/etc/letsencrypt
          - ./data/certbot/www:/var/www/certbot

  memcached_db:
    image: memcached:latest
    restart: always
    logging:
        driver: "json-file"
        options:
            max-size: "200k"
            max-file: "2"
    command:
      - '--memory-limit=100'
